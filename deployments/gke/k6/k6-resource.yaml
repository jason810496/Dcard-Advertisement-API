# k6-resource.yml

apiVersion: k6.io/v1alpha1
kind: TestRun
metadata:
  name: k6-sample
spec:
  parallelism: 2
  script:
    configMap:
      name: k6-script-config
      file: load-test.js
  # arguments: --out cloud
  separate: false
  runner:
    image: jasonbigcow/dcard-advertisement-api-k6-runner:v1
    imagePullPolicy: IfNotPresent
    env: 
      - name: API_HOST
        valueFrom:
          configMapKeyRef:
            name: k6-config
            key: API_HOST
      - name: API_PORT
        valueFrom:
          configMapKeyRef:
            name: k6-config
            key: API_PORT
      - name: AGE_START
        valueFrom:
          configMapKeyRef:
            name: k6-config
            key: AGE_START
      - name: AGE_END
        valueFrom:
          configMapKeyRef:
            name: k6-config
            key: AGE_END
      # write metrics to prometheus (grafana cloud)
      # https://github.com/javaducky/demo-k6-operator/blob/main/resources/k6-output-grafana-cloud.yaml
    #   - name: K6_OUT
    #     value: experimental-prometheus-rw
    # envFrom:
    #  - configMapRef:
    #      name: grafana-cloud-config
    #  - secretRef:
    #      name: grafana-cloud-secret
    # metadata:
      # labels:
      #   cool-label: foo
      # annotations:
      #   cool-annotation: bar
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    resources:
      limits:
        cpu: 1000m
        memory: 1000Mi
      requests:
        cpu: 500m
        memory: 500Mi
  starter:
    image: jasonbigcow/dcard-advertisement-api-k6-starter:v1  
    imagePullPolicy: IfNotPresent 
    metadata:
      # labels:
      #   cool-label: foo
      # annotations:
      #   cool-annotation: bar
    securityContext:
      runAsUser: 2000
      runAsGroup: 2000
      runAsNonRoot: true